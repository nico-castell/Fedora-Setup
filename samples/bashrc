#    _               _
#   | |__   __ _ ___| |__  _ __ ___
#   | '_ \ / _` / __| '_ \| '__/ __|
#  _| |_) | (_| \__ \ | | | | | (__
# (_)_.__/ \__,_|___/_| |_|_|  \___|
# file for interactive shells

# Source global definitions
if [ -f /etc/bashrc ]; then
	. /etc/bashrc
fi

# User specific environment
if ! [[ "$PATH" =~ "$HOME/.local/bin:$HOME/bin:" ]]
then
	PATH="$HOME/.local/bin:$HOME/bin:$PATH"
fi
export PATH

# Uncomment the following line if you don't like systemctl's auto-paging feature:
# export SYSTEMD_PAGER=

# Find if we have color prompt
# Uncomment to force color prompt
#force_color_prompt=yes
case "$TERM" in
	xterm-color|*-256color) color_prompt=yes ;;
	xterm-kitty)            color_prompt=yes ;;
esac

if [ -n "$force_color_prompt" ]; then
	if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
		# We have color support
		color_prompt=yes
	else
		color_prompt=
	fi
fi

# Find info about git and add it to the prompt.
git_info () {
	# Don't run this code if it's not going to be useful
	git rev-parse --git-dir &>/dev/null || return

	# Get easy to parse info
	_status="$(git status -b --porcelain=v2 2>/dev/null)"

	# Prepare tag, branch name or commit hash (that's the order of priority)
	branch="$(echo "$_status" | awk '$2 ~ /head/ {print $NF}')"
	[ "$branch" = "(detached)" ] && \
		branch="$(echo "$_status" | awk '$2 ~ /oid/ {print substr($NF,1,8)}')"
	_tag=$(git describe --tags --exact-match $branch 2>/dev/null)
	[ -n "$_tag" ] && branch=$_tag

	# Process info
	_commiting="$(echo "$_status" | grep "^[0-9]\s[MADRCU]."   | wc -l)"
	_ahead="$(echo "$_status"     | awk '$2 ~ /ab/ {print $3}' | sed -e "s/\+//")"
	_behind="$(echo "$_status"    | awk '$2 ~ /ab/ {print $4}' | sed -e "s/\-//")"
	_modified="$(echo "$_status"  | grep "^[0-9]\s.[MADRCU]"   | wc -l)"
	_untracked="$(echo "$_status" | grep "^\?"                 | wc -l)"

	# Prepare simbols for the reader
	[ -n "$_commiting" ] && [ "$_commiting" -gt 0 ] && info+=" +"
	[ -n "$_ahead"     ] && [ "$_ahead"     -gt 0 ] && info+=" ↑"
	[ -n "$_behind"    ] && [ "$_behind"    -gt 0 ] && info+=" ↓"
	[ -n "$_modified"  ] && [ "$_modified"  -gt 0 ] && info+=" ✎"
	[ -n "$_untracked" ] && [ "$_untracked" -gt 0 ] && info+=" ?"

	# Build the prompt info
	[ -n "$branch" ] && printf "%s%s%s" "$1" "$branch" "$info"
	unset branch _branch _ahead _behind _modified _untracked _status _tag info
}

if [ "$color_prompt" = yes ]; then
	PS1="[\u@\h \W\$(git_info ' - ')]\$ "

	# Color out some more stuff
	alias grep='grep --color=auto'
	alias fgrep='fgrep --color=auto'
	alias egrep='egrep --color=auto'
	alias diff='diff --color=auto'
	alias ip='ip --color=auto'
else
	PS1="[\u@\h \W]\$ "
fi

# Some ls aliases
alias lla='ls -lahF --group-directories-first'
alias llz='ls -lahFZ --group-directories-first'
alias ll='ls -lABhF --group-directories-first'
alias la='ls -ABhF --group-directories-first'
alias l='ls -lBhF --group-directories-first'
alias lz='ls -lBhFZ --group-directories-first'

# Create a new directory and cd into it
new() {
	mkdir "$1" && cd "$1"
}

# User specific aliases and functions
[ -d ~/.bashrc.d ] && \
	for i in $(ls ~/.bashrc.d); do
		. ~/.bashrc.d/$i
	done || :
